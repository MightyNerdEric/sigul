# Copyright (C) 2016 Red Hat, Inc.  All rights reserved.
#
# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program; if
# not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301, USA.  Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.
#
# Red Hat Author: Patrick Uiterwijk <puiterwijk@redhat.com>

AT_SETUP([Container check])

AT_SKIP_IF([! skopeo])

mkdir ca client bridge server gnupg rpm
chmod 700 gnupg

AT_DATA([nss_password_file], [[nss-pw
]])
AT_DATA([pkcs12_password_file], [[pk12-pw
]])

# Set up a CA and create all certificates
AT_CHECK([certutil -d ca -N -f nss_password_file])
# Specify serial number (-m) explicitly because it is time-based by default,
# and creating certificates quickly can result in a collision.
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null -n my-ca \
		-s 'CN=My CA' -t CT,, -x -v 120 -m 1], , , [ignore])
AT_CHECK([certutil -d ca -L -n my-ca -a > ca.pem])
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null \
		-n sigul-bridge-cert -s 'CN=localhost,OU=bridge' -c my-ca \
		-t u,, -v 120 -m 2], , , [ignore])
AT_CHECK([pk12util -d ca -o bridge.p12 -n sigul-bridge-cert \
		-k nss_password_file -w pkcs12_password_file], , [ignore])
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null \
		-n sigul-server-cert -s 'CN=localhost,OU=server' -c my-ca \
		-t u,, -v 120 -m 3], , , [ignore])
AT_CHECK([pk12util -d ca -o server.p12 -n sigul-server-cert \
		-k nss_password_file -w pkcs12_password_file], , [ignore])
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null \
		-n sigul-client-cert -s 'CN=root' -c my-ca -t u,, -v 120 -m 4],
	 , , [ignore])
AT_CHECK([pk12util -d ca -o client.p12 -n sigul-client-cert \
		-k nss_password_file -w pkcs12_password_file], , [ignore])


# Set up and start bridge:
AT_CHECK([certutil -d bridge -N -f nss_password_file])
AT_CHECK([certutil -d bridge -A -n my-ca -t CT,, -a -i ca.pem])
AT_CHECK([pk12util -d bridge -i bridge.p12 -k nss_password_file \
		-w pkcs12_password_file], , [ignore])
rm bridge.p12

[cat > bridge/bridge.conf <<EOF
[bridge]
required-fas-group:
[daemon]
unix-user:
unix-group:
[nss]
nss-dir: $(pwd)/bridge
nss-password: nss-pw
EOF]

AT_CHECK([sigul_bridge -c bridge/bridge.conf -d -v -v \
		--internal-log-dir="$(pwd)/bridge" \
		--internal-pid-dir="$(pwd)/bridge"])


# Set up and start server:
AT_CHECK([certutil -d server -N -f nss_password_file])
AT_CHECK([certutil -d server -A -n my-ca -t CT,, -a -i ca.pem])
AT_CHECK([pk12util -d server -i server.p12 -k nss_password_file \
		-w pkcs12_password_file], , [ignore])
rm server.p12

mkdir server/gnupg/
[cat > server/server.conf <<EOF
[server]
bridge-hostname: localhost
# This check is lenient here since we try different usernames
lenient-username-check: yes
[database]
database-path: $(pwd)/server/server.sqlite
[gnupg]
gnupg-home: $(pwd)/server/gnupg
gnupg-key-type: RSA
gnupg-key-usage: sign
[daemon]
unix-user:
unix-group:
[nss]
nss-dir: $(pwd)/server
nss-password: nss-pw
[binding]
enabled: test
EOF]

AT_CHECK([sigul_server_create_db -c server/server.conf -v -v])
AT_CHECK([printf 'rootroot\0' | \
		sigul_server_add_admin -c server/server.conf --batch -v -v \
		-n root])

AT_CHECK([sigul_server -c server/server.conf -d -v -v \
		--internal-log-dir="$(pwd)/server" \
		--internal-pid-dir="$(pwd)/server"])


# Set up client
AT_CHECK([certutil -d client -N -f nss_password_file])
AT_CHECK([certutil -d client -A -n my-ca -t CT,, -a -i ca.pem])
AT_CHECK([pk12util -d client -i client.p12 -k nss_password_file \
		-w pkcs12_password_file], , [ignore])
rm client.p12

[cat > client/client.conf <<EOF
[client]
bridge-hostname: localhost
server-hostname: localhost
user-name: root
[nss]
nss-dir: $(pwd)/client
nss-password: nss-pw
[binding]
enabled: test
EOF]

# Import test key
AT_CHECK([printf 'rootroot\0imported\0imported-key-pw\0' | \
 		sigul -c client/client.conf --batch -v -v \
		import-key imported-key \
		"$abs_srcdir/tests/imported-secret-key.asc"])
AT_CHECK([printf 'rootroot\0' | \
		sigul -c client/client.conf --batch -v -v \
		list-keys], ,
[imported-key
])
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch -v -v \
		get-public-key imported-key > public.asc])
AT_CHECK([gpg -q --homedir gnupg --import public.asc])
rm public.asc


# sign-container
[cat > manifest.json <<EOF
{
   "schemaVersion": 1,
   "name": "fedora",
   "tag": "25",
   "architecture": "amd64",
   "fsLayers": [
      {
         "blobSum": "sha256:be44cf43edd14914da818cc051cda96b95ac3ac939f4f8719d4cb8e61a334805"
      },
      {
         "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
      },
      {
         "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
      }
   ],
   "history": [
      {
         "v1Compatibility": "{\"architecture\":\"amd64\",\"author\":\"[Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\",\"config\":{\"Hostname\":\"bdcf92595a02\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"DISTTAG=f25docker\",\"FGC=f25\",\"FBR=f25\"],\"Cmd\":null,\"Image\":\"sha256:9f6038869900269a17c196510012c19ac30c0f4e73cf8c4aab2218a73b2a2ce5\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"container\":\"ec656b173a28e42fc890e05ac57f82250f9def310c6c930605c38234ac550734\",\"container_config\":{\"Hostname\":\"bdcf92595a02\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"DISTTAG=f25docker\",\"FGC=f25\",\"FBR=f25\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:0099a3bf2430ffb5bbfdee48fb5b131f9f67427a2c7f78f23aba062f902666b8 in / \"],\"Image\":\"sha256:9f6038869900269a17c196510012c19ac30c0f4e73cf8c4aab2218a73b2a2ce5\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"created\":\"2017-02-16T18:36:55.213572136Z\",\"docker_version\":\"1.12.6\",\"id\":\"2aed838309c49cff631e44f034d6140c530e5907676ae1bbd407b7222c75d362\",\"os\":\"linux\",\"parent\":\"8e9880e2f2f433621c34c94d346eecaf8e8e500e3e55f52a6c322d2f747ae137\"}"
      },
      {
         "v1Compatibility": "{\"id\":\"8e9880e2f2f433621c34c94d346eecaf8e8e500e3e55f52a6c322d2f747ae137\",\"parent\":\"3690474eb5b4b26fdfbd89c6e159e8cc376ca76ef48032a30fa6aafd56337880\",\"created\":\"2017-02-16T18:36:37.533508569Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV DISTTAG=f25docker FGC=f25 FBR=f25\"]},\"author\":\"[Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\",\"throwaway\":true}"
      },
      {
         "v1Compatibility": "{\"id\":\"3690474eb5b4b26fdfbd89c6e159e8cc376ca76ef48032a30fa6aafd56337880\",\"created\":\"2017-02-16T18:36:36.200746321Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  MAINTAINER [Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\"]},\"author\":\"[Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\",\"throwaway\":true}"
      }
   ],
   "signatures": [
      {
         "header": {
            "jwk": {
               "crv": "P-256",
               "kid": "HNIR:XPMB:QFKH:RGD7:TYIW:XYFZ:WG2W:7YIP:F4J4:UO4T:26LK:IBXX",
               "kty": "EC",
               "x": "VUN1gUvxZkrnyPxLl1pxReQhsfQkHNb1SsMH_UfAvTY",
               "y": "bfGBViOwxAPt3Uxk7KjwDENVLhiFM3OyoshesX--xHM"
            },
            "alg": "ES256"
         },
         "signature": "NSeAN7q8wiNO-iCMG_NUVOgjyXtSsWjfWbMyTZDVGmV8WehMTbaRvWGZc5-FN6CQDMYr-righQFksphvVtWEgA",
         "protected": "eyJmb3JtYXRMZW5ndGgiOjMxNDIsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxNy0wMi0yMVQwMjoyMzoxMVoifQ"
      }
   ]
}
EOF]

[cat > manifest2.json <<EOF
{
   "schemaVersion": 1,
   "name": "fedora",
   "tag": "25",
   "architecture": "amd64",
   "fsLayers": [
      {
         "blobSum": "sha256:be44cf43edd14914da818cc051cda96b95ac3ac939f4f8719d4cb8e61a334805"
      },
      {
         "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
      },
      {
         "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
      }
   ],
   "history": [
      {
         "v1Compatibility": "{\"architecture\":\"amd64\",\"author\":\"[Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\",\"config\":{\"Hostname\":\"bdcf92595a02\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"DISTTAG=f25docker\",\"FGC=f25\",\"FBR=f25\"],\"Cmd\":null,\"Image\":\"sha256:9f6038869900269a17c196510012c19ac30c0f4e73cf8c4aab2218a73b2a2ce5\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"container\":\"ec656b173a28e42fc890e05ac57f82250f9def310c6c930605c38234ac550734\",\"container_config\":{\"Hostname\":\"bdcf92595a02\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"DISTTAG=f25docker\",\"FGC=f25\",\"FBR=f25\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:0099a3bf2430ffb5bbfdee48fb5b131f9f67427a2c7f78f23aba062f902666b8 in / \"],\"Image\":\"sha256:9f6038869900269a17c196510012c19ac30c0f4e73cf8c4aab2218a73b2a2ce5\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":{}},\"created\":\"2017-02-16T18:36:55.213572136Z\",\"docker_version\":\"1.12.6\",\"id\":\"2aed838309c49cff631e44f034d6140c530e5907676ae1bbd407b7222c75d362\",\"os\":\"linux\",\"parent\":\"8e9880e2f2f433621c34c94d346eecaf8e8e500e3e55f52a6c322d2f747ae137\"}"
      },
      {
         "v1Compatibility": "{\"id\":\"8e9880e2f2f433621c34c94d346eecaf8e8e500e3e55f52a6c322d2f747ae137\",\"parent\":\"3690474eb5b4b26fdfbd89c6e159e8cc376ca76ef48032a30fa6aafd56337880\",\"created\":\"2017-02-16T18:36:37.533508569Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  ENV DISTTAG=f25docker FGC=f25 FBR=f25\"]},\"author\":\"[Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\",\"throwaway\":true}"
      },
      {
         "v1Compatibility": "{\"id\":\"3690474eb5b4b26fdfbd89c6e159e8cc376ca76ef48032a30fa6aafd56337880\",\"created\":\"2017-02-16T18:36:36.200746321Z\",\"container_config\":{\"Cmd\":[\"/bin/sh -c #(nop)  MAINTAINER [Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\"]},\"author\":\"[Adam Miller \\u003cmaxamillion@fedoraproject.org\\u003e] [Patrick Uiterwijk \\u003cpatrick@puiterwijk.org\\u003e]\",\"throwaway\":true}"
      }
   ],
   "signatures": [
      {
         "header": {
            "jwk": {
               "crv": "P-256",
               "kid": "HNIR:XPMB:QFKH:RGD7:TYIW:XYFZ:WG2W:7YIP:F4J4:UO4T:26LK:IBXX",
               "kty": "EC",
               "x": "VUN1gUvxZkrnyPxLl1pxReQhsfQkHNb1SsMH_UfAvTY",
               "y": "bfGBViOwxAPt3Uxk7KjwDENVLhiFM3OyoshesX--xHM"
            },
            "alg": "ES256"
         },
         "signature": "R0-iL5hx5HjJlt6rhcL-XtBC4dOqHPc3qMbVhcm5fmd8rHQtn8xUgoxkd-hEVvIdPOGQrKfSL5MflmVxJvkXzQ",
         "protected": "eyJmb3JtYXRMZW5ndGgiOjMxNDIsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxNy0wMi0yMFQyMDo0MTo1OVoifQ"
      }
   ]
}
EOF]


# sign-container
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch -v -v \
		sign-container -o signature.asc imported-key manifest.json testimage])

AT_CHECK([GNUPGHOME=gnupg skopeo standalone-verify manifest2.json testimage \
          "E521C6FD707E651BD295D6BA54B69BA6868C1849" signature.asc], ,
         [Signature verified, digest sha256:bb702816c9c10d60494edd610d1263357c5d047d98ea974d4c66e40bcc44246c
], [])

# Terminate daemons
AT_CHECK([kill "$(cat server/sigul_server.pid)"])
AT_CHECK([kill -QUIT "$(cat bridge/sigul_bridge.pid)"])

AT_CLEANUP
